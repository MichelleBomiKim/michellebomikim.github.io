[
  {
    "objectID": "assignment1.html",
    "href": "assignment1.html",
    "title": "Assignment1",
    "section": "",
    "text": "Google Slides : Yi3RyUCilZo/edit#slide=id.g20320c13c19_0_69XMhRGUqwYD4vrJETNEg1GRok9-hImQj-Yi3RyUCilZo/edit#slide=id.g20320c13c19_0_69"
  },
  {
    "objectID": "Assignment2.html",
    "href": "Assignment2.html",
    "title": "Michelle Kim",
    "section": "",
    "text": "https://docs.google.com/presentation/d/17UuIJb9nWSp0AsZ7pAPO6CxRmOL2ZKJGCQKj4vMByrQ/edit#slide=id.g208bf22879d_0_64"
  },
  {
    "objectID": "Assignment5.html",
    "href": "Assignment5.html",
    "title": "Michelle Kim",
    "section": "",
    "text": "Question 3.\nWeak Entities are dependent on another entity set. They are associated with an identifying entity. If entity set does not have enough attributes to present uniquely, weak entities provide extra information to identify uniquely.\nQuestion4."
  },
  {
    "objectID": "assignment4.html#principal-component-analysis",
    "href": "assignment4.html#principal-component-analysis",
    "title": "Michelle Kim",
    "section": "Principal Component Analysis",
    "text": "Principal Component Analysis\nlibrary(datasets) library(ISLR) arrest = USArrests states=row.names(USArrests) names(USArrests) # Get means and variances of variables apply(USArrests, 2, mean) apply(USArrests, 2, var) # PCA with scaling pr.out=prcomp(USArrests, scale=TRUE) names(pr.out) # Five pr.out\\(center # the centering and scaling used (means) pr.out\\)scale # the matrix of variable loadings (eigenvectors) dim(pr.out\\(x) pr.out\\)rotation=-pr.out\\(rotation pr.out\\)x=-pr.out\\(x biplot(pr.out, scale=0) pr.out\\)sdev pr.var=pr.out$sdev^2 pr.var pve=pr.var/sum(pr.var) pve plot(pve, xlab=“Principal Component”, ylab=“Proportion of Variance Explained”, ylim=c(0,1),type=‘b’)\nlibrary(dplyr) library(ggplot2) library(RColorBrewer)\ncomputers = read.csv(“https://raw.githubusercontent.com/guru99-edu/R-Programming/master/computers.csv”)\nrescaled_comp <- computers[4:5] %>% mutate(hd_scal = scale(hd), ram_scal = scale(ram)) %>% select(c(hd_scal, ram_scal))\nggplot(data = rescaled_comp, aes(x = hd_scal, y = ram_scal)) + geom_point(pch=20, col = “blue”) + theme_bw() + labs(x = “Hard drive size (Scaled)”, y =“RAM size (Scaled)” ) + theme(text = element_text(family=“Georgia”))\nlibrary(dplyr) library(ggplot2) library(RColorBrewer)\ncomputers = read.csv(“https://raw.githubusercontent.com/guru99-edu/R-Programming/master/computers.csv”)\nOnly retain two variables for illustration\nrescaled_comp <- computers[4:5] %>% mutate(hd_scal = scale(hd), ram_scal = scale(ram)) %>% select(c(hd_scal, ram_scal))\nggplot(data = rescaled_comp, aes(x = hd_scal, y = ram_scal)) + geom_point(pch=20, col = “blue”) + theme_bw() + labs(x = “Hard drive size (Scaled)”, y =“RAM size (Scaled)” ) + theme(text = element_text(family=“Georgia”))\ninstall.packages(“animation”)\ninstall.packages(“animation”) library(animation) set.seed(2345) library(animation)\nAnimate the K-mean clustering process, cluster no. = 4\nkmeans.ani(rescaled_comp[1:2], centers = 4, pch = 15:18, col = 1:4)"
  },
  {
    "objectID": "lab3.html",
    "href": "lab3.html",
    "title": "Michelle Kim",
    "section": "",
    "text": "library(haven) library(regplot) TEDS_2016 <- read_stata(“https://github.com/datageneration/home/blob/master/DataProgramming/data/TEDS_2016.dta?raw=true”) summary(TEDS_2016) TEDS_2016\\(Tondu <-as.numeric(TEDS_2016\\)Tondu,labels=c(“Unification now”, “Status quo, unif. in future”, “Status quo, decide later”, “Status quo forever”, “Status quo, indep. in future”, “Independence now”, “No response”)) df1 <- TEDS_2016[,c(“Tondu”, “age”,“edu”,“income”)] reg <- lm (Tondu~ age+ edu + income, data=df1) summary(reg) regplot(reg)"
  },
  {
    "objectID": "EPPS6323.html",
    "href": "EPPS6323.html",
    "title": "Michelle Kim",
    "section": "",
    "text": "DMC- data modeling culture, encourage to pursue ever deeper knowledge production.\nDescription- statistical inference about aspects of distribution of one or more events.\nCausal system events relationship between events in a domain of interest."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Michelle",
    "section": "",
    "text": "I’m currently majoring in SDAR (Socia Data Analytic and Research)"
  },
  {
    "objectID": "Assignment1-1.html",
    "href": "Assignment1-1.html",
    "title": "Michelle Kim",
    "section": "",
    "text": "TEDS_2016\\(Tondu<-as.numeric(TEDS_2016\\)Tondu,labels=c(“Unificationnow”, “Statusquo,unif.infuture”, “Statusquo,decidelater”, “Statusquoforever”, “Statusquo,indep.infuture”, “Independencenow”, “Noresponse”))\nbarplot(table_tondu, main = “Barchart of Tondu”, ylab = “Frequency”, names.arg = c(“unification now”, “Statusquo”, “unif.infuture”, “Statusquoforever”, “Statusquo,indep.infuture”, “Independencenow”, “Noresponse”))"
  },
  {
    "objectID": "PPTproposal.html",
    "href": "PPTproposal.html",
    "title": "Michelle Kim",
    "section": "",
    "text": "https://cometmail-my.sharepoint.com/:p:/g/personal/xxz210021_utdallas_edu/EYyQ8EW_hGZJsohw1_DOacsBkeUVeMpPw6vDpqcnzg4M0w"
  },
  {
    "objectID": "example.html",
    "href": "example.html",
    "title": "example",
    "section": "",
    "text": "This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nWhen you click the Knit button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:\n\nsummary(cars)\n\n     speed           dist       \n Min.   : 4.0   Min.   :  2.00  \n 1st Qu.:12.0   1st Qu.: 26.00  \n Median :15.0   Median : 36.00  \n Mean   :15.4   Mean   : 42.98  \n 3rd Qu.:19.0   3rd Qu.: 56.00  \n Max.   :25.0   Max.   :120.00"
  },
  {
    "objectID": "example.html#including-plots",
    "href": "example.html#including-plots",
    "title": "example",
    "section": "Including Plots",
    "text": "Including Plots\nYou can also embed plots, for example:\nlibrary(shiny)\nui <- basicPage( plotOutput(“plot1”, click = “plot_click”), verbatimTextOutput(“info”) )\nserver <- function(input, output) { output\\(plot1 <- renderPlot({  plot(mtcars\\)wt, mtcars$mpg) })\noutput\\(info <- renderText({  paste0(\"x=\", input\\)plot_click\\(x, \"\\ny=\", input\\)plot_click$y) }) }\nshinyApp(ui, server)\nNote that the echo = FALSE parameter was added to the code chunk to prevent printing of the R code that generated the plot."
  }
]